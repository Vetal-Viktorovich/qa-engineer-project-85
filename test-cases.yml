---
- summary: |
    Успешная регистрация пользователя.
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    no-data
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь успешно зарегистрован

- summary: |
    Проверка регистрация при невалидном Email.
  requirement: |
    При невалидном Email пользователь должен получить сообщение об ошибке.
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    no-data
  steps:
    - Вводим Nickname
    - Вводим Email, например user.gmail.com
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь получает сообщение о невалидности Email

- summary: |
    Проверка успешной авторизации 
  requirement: |
    При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница авторизации
    Пользователь зарегестрирован на сайте
  test-data: |
    Email = Vanya@mail.ru
    Password = zHP-wA7-7yy-xR3
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка авторизации пользователя с помощью Github
  requirement: |
    Пользователь должен иметь возможность авторизоваться с помощью Github
  prerequisites: |
    Открыта страница авторизации
    Пользователь зарегестрирован на Github
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку  "Sign in with Github" 
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка авторизации пользователя с помощью Discord  
  requirement: |
    Пользователь должен иметь возможность авторизоваться с помощью Discord 
  prerequisites: |
    Открыта страница авторизации
    Пользователь зарегестрирован на Discord
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку  "Sign in with Discord" 
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка  создания игры  с ботом
  requirement: |
    Пользователь должен иметь возможность создать игру с ботом
  prerequisites: |
    Пользователь авторизован 
    Открыта главная страница
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку "Create a game"
    - В параметре "Game Type" выбираем параметр "With a bot"
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Игра с ботом успешно создана

- summary: |
    Проверка создание турнира
  requirement: |
    Пользователь должен иметь возможность создавать турнир
  prerequisites: |
    Пользователь авторизован 
    Открыта главная страница
  test-data: |
    no-data
  steps:
    - Нажимаем на свой никнейм или на картинку своего профиля
    - В Открывшемся окне выбираем "TOURNAMENTS"
    - Скролим ввниз до "Create a new tournament"
    - Выбираем нужные нам параметры турнира
    - Нажимаем кнопку "CREATE"
  expected-result: |
    Турнир успешно создан, открывается страница ожидания турнира

- summary: |
    Проверка создания игры без регистрации
  requirement: |
    Пользователь должен иметь возможность создать игру без регистрации
  prerequisites: |
    Пользователь не авторизован
    Открыта начальная страница сайта
  test-data: |
    no-data
  steps:
    - Нажимаем на кнопку "TRY SIMPLE BATTLE"
  expected-result: |
     Игра без регистрации успешно создана
     
- summary: |
    Проверка выбора параметров при создании игры
  requirement: |
    Пользователь должен иметь возможность выбирать параметры при создании игры
  prerequisites: |
    Пользователь авторизован
    Открыта главная страница сайта
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку "Create a game"
    - В параметре "Level" выбираем параметр, например "medium"
    - В параметре "Game Type" выбираем параметр, например "With a bot"
    - В параметре "Time control" выбираем параметр, например "25 min"
    - В параметре "Choose task by name or tags" выбираем параметр, например "anagram_finder"
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Игра с выбранными параметрами успешно создана

- summary: |
    Проверка создания игры с другом
  requirement: |
    Пользователь должен иметь возможность создать игру с другом
  prerequisites: |
    Пользователь авторизован
    Открыта главная страница сайта
  test-data: |
    no-data
  steps:
    - Нажать на кнопку "Create a game"
    - В параметре "Game Type" выбираем параметр "With a friend"
    - В параметре "Choose opponent" находим друга и выбираем  его
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Игра с другом успешно создана

- summary: |
    Проверка победы в игре
  requirement: |
    Пользователь должен иметь возможность побеждать в игре
  prerequisites: |
    Создана игра rect_area
  test-data: |
    Решение:
    const _ = require("lodash");
    const R = require("rambda");
    
    const solution = (width, length) => {
    return width * length;
    };
    
    module.exports = solution;
  steps:
    - Выбираем нужный нам язык праграмирования , например "NodeJS"
    - Пишем код(Решение)
    - Нажимаем кнопку "Charging"
  expected-result: |
    Игра закончена, выводится сообщение о победе
